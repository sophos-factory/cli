name: Publish Release to GitHub

on:
  workflow_call:
  workflow_dispatch:

jobs:
  # Create GitHub Release and upload binary assets
  create_release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    permissions: write-all
    outputs:
      upload_url: ${{ steps.release.outputs.upload_url }}
    steps:
      - name: Check out and get tags
        uses: actions/checkout@v2
      - run: git fetch --prune --unshallow --tags
      - name: Generate the version name from tags
        id: generate-version
        run: echo "::set-output name=version::$(git tag --list | tail -n 1)"
      - name: Create Release
        id: release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.generate-version.outputs.version }}
          release_name: Release ${{ steps.generate-version.outputs.version }}
          draft: false
          prerelease: false

  # Publish macOS and Linux x64 build
  create_binary:
    name: Create executable for ${{ matrix.operating-system }}
    needs: create_release
    runs-on: ubuntu-latest
    permissions: write-all
    strategy:
      matrix:
        operating-system: [linux, macos, win]
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 16.x

      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v2
        id: npm-cache
        if: ${{ steps.npm-cache.outputs.cache-hit != 'true' }}
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm install
      - run: npm run build:aot
      - run: npm run build:exe:${{ matrix.operating-system }}

      # Windows
      - if: ${{ matrix.operating-system == 'win' }}
        run: zip --junk-paths refactr-${{ matrix.operating-system }}-x64.zip dist/${{ matrix.operating-system }}/refactrctl.exe ./LICENSE

      # macOS, Linux
      - if: ${{ matrix.operating-system != 'win' }}
        run: zip --junk-paths refactr-${{ matrix.operating-system }}-x64.zip dist/${{ matrix.operating-system }}/refactrctl ./LICENSE

      - run: sha256sum ./refactr-${{ matrix.operating-system }}-x64.zip -b | awk '{ print $1 }' >> ./refactr-${{ matrix.operating-system }}-x64-sha256sum.txt

      - name: Upload Release Asset (${{ matrix.operating-system }})
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./refactr-${{ matrix.operating-system }}-x64.zip
          asset_name: refactr-${{ matrix.operating-system }}-x64.zip
          asset_content_type: application/zip

      - name: Upload SHA256 Sum (${{ matrix.operating-system }})
        id: upload-sha
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./refactr-${{ matrix.operating-system }}-x64-sha256sum.txt
          asset_name: refactr-${{ matrix.operating-system }}-x64-sha256sum.txt
          asset_content_type: plain/text
